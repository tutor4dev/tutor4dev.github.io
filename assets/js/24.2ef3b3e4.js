(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{169:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",[s._v("จัดการกับ State ของ Form ด้วย React Hooks")]),s._v(" "),a("p",[s._v("การจัดการ State ของ Form ใน Class Component ของ React นั้นเป็นสิ่งที่ยุ่งยากอย่างมาก ยิ่งเมื่อเทียบกับคู่แข่ง เช่น Angular และ Vue เรียกได้ว่าเป็นจุดอ่อนของ React จุดนึงเลยทีเดียว ในบทความนี้จะเป็นการใช้ของเล่นใหม่ที่เรียกว่า React Hooks มาช่วยในการจัดการ State ของ Form ซึ่งเมื่อเทียบกับวิธีการเดิมแล้วเรียกได้ว่าสะดวกและง่ายกว่าเดิมมากครับ")]),s._v(" "),a("p",[s._v("ในตอนท้ายของบทความเราจะลอง Implement Custom Hooks อย่างง่ายเพื่อเป็นการ Reuse Logic ในการจัดการ State ของ Form ด้วยเช่นกันครับ")]),s._v(" "),a("h3",{attrs:{id:"เตรียมไฟล์สำหรับเขียนโปรแกรม"}},[s._v("เตรียมไฟล์สำหรับเขียนโปรแกรม")]),s._v(" "),a("p",[a("em",[s._v("Path")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{staticClass:"hljs"},[a("code",[s._v("\n+-src\n|   |-FormApplication.jsx\n|   |-custom-hooks.js\n")])])]),a("h3",{attrs:{id:"react-functional-component"}},[s._v("React Functional Component")]),s._v(" "),a("p",[s._v("เรามาเริ่มต้นด้วยการเขียน Functional Component ตามตัวอย่างโค้ดด้านล่างครับ")]),s._v(" "),a("p",[s._v("ไฟล์ "),a("em",[s._v("src/FormApplication.jsx")])]),s._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{staticClass:"hljs"},[a("code",[s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" React "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'react'")]),s._v("\n\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("FormApplication")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(' <div>\n        <input type="text" />\n        <input type="text" />\n    </div>\n}\n')])])]),a("h3",{attrs:{id:"functional-component-และ-state"}},[s._v("Functional Component และ State")]),s._v(" "),a("p",[s._v("เมื่อไหร่ก็ตามที่เราต้องการใช้งาน State ภายใน Funtional Component ของ React ก็ต้องนี่เลยครับ "),a("code",[s._v("useState()")]),s._v(" ใช้งานง่ายตรงไปตรงมา")]),s._v(" "),a("p",[s._v("ไฟล์ "),a("em",[s._v("src/FormApplication.jsx")])]),s._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{staticClass:"hljs"},[a("code",[s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" React, { useState } "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'react'")]),s._v("\n\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("FormApplication")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" [ firstName, setFirstName ] = useState("),a("span",{staticClass:"hljs-string"},[s._v("'Steve'")]),s._v(")\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" [ lastName, setLastName ] = useState("),a("span",{staticClass:"hljs-string"},[s._v("'Jobs'")]),s._v(")\n\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(' <div>\n        <input type="text" value={ firstName } />\n        <input type="text" value={ lastName } />\n    </div>\n}\n')])])]),a("blockquote",[a("p",[a("code",[s._v("useState()")]),s._v(" คืนค่าในแบบ Array เนื่องจากลำดับของ Array เป็นสิ่งสำคัญโดยตำแหน่งที่ 0 จะเป็นตัว State ในขณะที่ตำแหน่งที่ 1 จะเป็น Method ที่ทำหน้าที่ในการ Mutate State นั้นๆ")])]),s._v(" "),a("h3",{attrs:{id:"จัดการกับ-onchange-event"}},[s._v("จัดการกับ "),a("code",[s._v("onChange")]),s._v(" Event")]),s._v(" "),a("p",[s._v("เมื่อเกิดการเปลี่ยนแปลงค่าใน "),a("code",[s._v("<input />")]),s._v(" จะเกิด "),a("code",[s._v("onChange")]),s._v(" Event ขึ้น สิ่งที่เราต้องการคือนำ Method ที่จะทำการ Mutate State ของเรามา Binding กับ "),a("code",[s._v("onChange")]),s._v(" "),a("code",[s._v("props")]),s._v(" ของ "),a("code",[s._v("<input />")]),s._v(" ซึ่งหากมีการ Invoke Method ดังกล่าวก็จะเป็นการ Trigger ให้เกิดการ Re-render ใหม่ครับ")]),s._v(" "),a("p",[s._v("โดยเราสามารถ Binding Method จาก Hooks โดยตรงหรือกำหนด Nested Function เพื่อเรียกใช้งาน Method จาก Hooks อีกทอดก็ได้เช่นกัน")]),s._v(" "),a("p",[s._v("ไฟล์ "),a("em",[s._v("src/FormApplication.jsx")])]),s._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{staticClass:"hljs"},[a("code",[s._v("\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("FormApplication")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" [ firstName, setFirstName ] = useState("),a("span",{staticClass:"hljs-string"},[s._v("'Steve'")]),s._v(")\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" [ lastName, setLastName ] = useState("),a("span",{staticClass:"hljs-string"},[s._v("'Jobs'")]),s._v(")\n\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("handleChangeLastName")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("e")]),s._v(") ")]),s._v("{\n        setLastName(e.target.value)\n    }\n\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(' <div>\n        <input type="text" value={ firstName } onChange={ e => setFirstName(e.target.value) } />\n        <input type="text" value={ lastName } onChange={ handleChangeLastName } />\n    </div>\n}\n')])])]),a("h3",{attrs:{id:"custom-hooks"}},[s._v("Custom Hooks")]),s._v(" "),a("p",[s._v("เพื่อเป็นการ Reuse ส่วนของการจัดการ "),a("code",[s._v("onChange")]),s._v(" Event เราจึงใช้วิธีการกำหนด Custom Hooks อย่างง่าย ขึ้นมาสักตัว โดย Custom Hooks ก็คือ JavaScript Function นั่นเอง")]),s._v(" "),a("p",[s._v("เราจะตั้งชื่อ Custom Hooks ตัวนี้ว่า "),a("code",[s._v("useFormInput")]),s._v(" ซึ่งจะรับ Argument เพื่อใช้เป็นค่าเริมต้นและ Custom Hooks เองก็สามารถจะเรียกใช้ Hooks ตัวอื่นๆ ได้เช่นกัน ในส่วนท้ายเจ้า "),a("code",[s._v("useFormInput")]),s._v(" ก็จะต้องคืนค่า State และ Mutate Method ในแบบ Plain JavaScript Object ครับ")]),s._v(" "),a("p",[s._v("ไฟล์ "),a("em",[s._v("custom-hooks.js")])]),s._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{staticClass:"hljs"},[a("code",[s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("default")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("useFormInput")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("initValue")]),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" { value, setValue } = useState(initValue)\n\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("handleChange")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("e")]),s._v(") ")]),s._v("{\n        setValue(e.target.value)\n    }\n\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("onChange")]),s._v(": handleChange,\n        value\n    }\n}\n")])])]),a("blockquote",[a("p",[s._v("เราสามารถคืนค่าจาก Custom Hooks ในแบบ Array เหมือนกับกรณีของ "),a("code",[s._v("useState()")]),s._v(" ได้เช่นกัน แต่เพื่อความสะดวกในการนำไปใช้งานในลำดับต่อไปเราจึงเลือกที่จะคืนค่าในแบบ Plain JavaScript Object ครับ")])]),s._v(" "),a("h3",{attrs:{id:"ใช้งาน-useforminput-hooks"}},[s._v("ใช้งาน "),a("code",[s._v("useFormInput()")]),s._v(" Hooks")]),s._v(" "),a("p",[s._v("มาถึงขั้นตอนสุดท้ายแล้วนะครับ นั่นก็คือการนำ "),a("code",[s._v("useFormInput()")]),s._v(" มาใช้นั่นเอง")]),s._v(" "),a("p",[s._v("ไฟล์ "),a("em",[s._v("src/FormApplication.jsx")])]),s._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{staticClass:"hljs"},[a("code",[s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" useFormInput "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'./custom-hooks'")]),s._v("\n\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("FormApplication")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" { value, onChange } = useFormInput("),a("span",{staticClass:"hljs-string"},[s._v("'Steve'")]),s._v(")\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" lastName = useFormInput("),a("span",{staticClass:"hljs-string"},[s._v("'Jobs'")]),s._v(")\n\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(' <div>\n        <input type="text" onChange={ onChange } value={ value } />\n        <input type="text" { ...lastName } />\n    </div>\n}\n')])])]),a("blockquote",[a("p",[s._v("ในกรณีของ "),a("code",[s._v("useFormInput()")]),s._v(" นั้นการคืนค่าในแบบ Plain JavaScript Object จะมีความสะดวกในการนำไป Binding มากกว่าเนื่องจากเราสามารถใช้ Spread Syntax ซึ่งทำให้โค้ดที่เขียนค่อนข้างจะกระชับกว่าพอสมควร")])]),s._v(" "),a("h3",{attrs:{id:"つづく"}},[s._v("つづく")])])}],!1,null,null,null);t.default=e.exports}}]);